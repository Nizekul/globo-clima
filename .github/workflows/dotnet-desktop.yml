name: Deploy to EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
          
      - name: "check is MY_SECRET exists"
        env: 
            super_secret: ${{ secrets.DOCKER_USERNAME }}
        if: ${{ env.DOCKER_USERNAME == '' }}
        run: 'echo "echo the secret \"MY_SECRET\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'
        
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login Docker Hub
        run: docker login -u your_dockerhub_username -p ${{ secrets.DOCKER_TOKEN }}

      - name: Build docker image
        run: docker build -t globo-clima/globo-clima .

      - name: Push image docker
        run: docker push globo-clima/globo-clima

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull globo-clima/globo-clima:latest

      - name: Remove docker container
        run: docker rm -f globo-clima || true

      - name: Run docker container
        run: docker run -d -p 5000:5000 --name globo-clima globo-clima/globo-clima
