name: Deploy to EC2
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
       
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Login Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build docker image
        run: |
          cd globo-clima
          docker build \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            --build-arg JWT_KEY=${{ secrets.JWT_KEY }} \
            --build-arg JWT_ISSUER=${{ secrets.JWT_ISSUER }} \
            --build-arg JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }} \
            --build-arg TOKEN_WEATHER=${{ secrets.TOKEN_WEATHER }} \
            -t lukestronda/globo-clima .

      - name: Push image docker
        run: docker push lukestronda/globo-clima:latest
  
  deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: Pull image from docker hub
              run: sudo docker pull lukestronda/globo-clima:latest
            - name: Remove docker container
              run: sudo docker rm -f globo-clima
            - name: Run docker container
              run: |
                  sudo docker run -d -p 5000:5000 --name globo-clima lukestronda/globo-clima
                  sudo a2ensite globo-clima.conf
                  sudo systemctl reload apache2
                  sudo systemctl restart apache2
